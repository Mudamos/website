- title = @phase.name
- description = @phase.description
- image = @cycle.picture(:header)

- meta title: title, description: description, og: { title: title, description: description, image: image, locale: 'pt_BR', type: 'article' }, twitter: { description: description, card: 'summary', title: title, image: { src: image } }

.petition-widget-builder-container
.petition-index
section#petition-index
  = render 'widgets/smart_banner'
  .row
    .col-lg-6.col-md-12.petition-side-bar.petition-view
      h1.petition-name= @phase.name
      h3.petition-description= @phase.description
      - if @phase.plugin_relation.ready?
        .row.signatures-info.hidden-xs
          .col-xs-12.already-signed
            strong
            | já assinaram
            div#petition-signers-tablet.signatures-list.visible-md-block.visible-sm-block

          .col-xs-12
            .petition-signatures-progress

          .col-xs-12.progress-description
            | Faltam
            strong.remaining-signatures
            | assinaturas para a meta de&nbsp;
            strong.current-goal
          .col-xs-12.final-goal
            small
              | Nossa meta final é de
              strong<>= number_with_delimiter @petition.signatures_required
              small assinaturas

          - if @phase.in_progress?
            .col-lg-12.col-sm-6.col-xs-12.download-document.bottom-info-container
              i.pull-left.material-icons style="color: #{@cycle.color}" file_download
              div.medium-padded
                - if petition_published_pdf_version
                  strong
                    a.download-document> href=petition_published_pdf_version.pdf_url style="color: #{@cycle.color}" target="_blank"
                      | Baixe o PDF
                    .visible-lg-inline do projeto
              div.medium-padded.subtitle
                - if petition_published_pdf_version && petition_published_pdf_version.blockchain_timestamp
                  small.visible-lg-inline.last_version_date
                    = "A versão atual for criada no dia #{petition_published_pdf_version.blockchain_timestamp.strftime("%d/%m/%Y às %H:%M")}"
                  small.hidden-lg.last_version_date
                    = "Atualizado em #{petition_published_pdf_version.blockchain_timestamp.strftime("%d/%m/%Y, %H:%M")}"
              - if petition_past_pdf_versions.length > 0
                div.medium-padded.subtitle.visible-lg-block
                  a.past-versions href="javascript:void(0)" style="color: #{@cycle.color}"
                    strong Veja versões anteriores

                script#popover_template type="text/template"
                  .petition-past-versions-popover.popover role="tooltip"
                    .arrow
                    h3.popover-title
                    .popover-content

                script#past-versions-popover type="text/template"
                  ul.list-unstyled.petition-past-versions-list
                    - petition_past_pdf_versions.each do |version|
                      li.clearfix
                        a.download href="#{version.pdf_url}" title="Clique para baixar essa versão"
                          .version style="color: #{@cycle.color}"
                            = "Versão #{version.version_name}"
                          - if version.blockchain_timestamp
                            = "Criada em #{version.blockchain_timestamp.strftime("%d/%m/%Y às %H:%M")}"

        .row.phone-bottom-info.visible-xs-block
          - if @phase.in_progress?
          .col-xs-12.text-right.signatures
            .total-signatures
            div
              small assinaturas
            div style="margin-top: 6px"
              small>
                | Nossa meta final é de
                strong<>= number_with_delimiter @petition.signatures_required
              small assinaturas

        .row#petition-signers-desktop.signatures-list.visible-lg-block
        .row.view-all-signatures
          .container-fluid
            a href="#{petition_signatures_path(@petition)}" style="color: #{@cycle.color}" Confira as assinaturas autenticadas

        - if @phase.in_progress?
          - if @user_signed_petition
            .row
              .col-xs-12
                | Recebemos sua pré-assinatura! Por um requisito legal, agora você precisa baixar o App da Mudamos para confirmar a assinatura
            .row.small-gap
              .col-xs-12
                a.store-badge.app href=mobile_app_ios_store_url target="_blank"
                a.store-badge.play href=mobile_app_android_store_url target="_blank"
          - else
            .row
              .col-xs-12
                button.rounded-button.sign-petition style="background: #{cycle_background @cycle.color}"
                  = @petition.call_to_action

    .col-lg-6.col-md-12.petition-view.petition-body-container
      - if  @phase.plugin_relation.ready?
        div.embedded-link
          strong.pull-right style="color: #{@cycle.color}"
            i.icon-share
            |  Compartilhar
        - if @petition.video_id.present?
          .row
            .col-xs-12 style="margin-bottom: 15px"
              = you_tube_embed @petition.video_id

        p.presentation= @petition.presentation

        .row
          .col-xs-12
            h3.section-title.petition-body-title style="border-color: #{@cycle.color}" Projeto de lei
        .petition-body= markdown @petition.published_version.body
      - else
        p Este Projeto de Lei ainda não foi publicado, aguarde enquanto a edição do documento seja finalizada e tente novamento mais tarde.

      = render 'layouts/shared/footer'

- content_for :modals
  = render "layouts/shared/modal", modal_id: 'modal_petition_sign', size: 'sm', cache: true, content: render(file: "cycles/plugin_relations/petition_sign_modal")

css:
  .petition-side-bar {
    background-image:
      linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0) 40%),
      linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0) 30%),
      linear-gradient(#{color_as_rgba(@cycle.color, 0.3)}, #{color_as_rgba(@cycle.color, 0.3)}),
      linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),
      url("#{@cycle.picture.url}");
    background-color: #{color_as_rgba(@cycle.color, 0.3)};
  }

javascript:
  $(".petition-widget-builder-container").muPetitionWidgetBuilder({
    petitionId: "#{@petition.id}",
    petitionName: "#{@phase.name}",
    cycleColor: "#{@cycle.color}"
  });

  $(".embedded-link strong").click(function() {
    $(".petition-widget-builder-container").muModal("show");
  });

- if @phase.plugin_relation.ready?
  javascript:
    $(document).ready(function() {
      var petitionInProgress = #{@phase.in_progress?};

      $("#petition-signers-desktop").muPetitionSigners(#{@petition.id}, petitionInProgress, apiClient);
      $("#petition-signers-tablet").muPetitionSignersSmall(#{@petition.id}, petitionInProgress, apiClient);

      var progressBar = $(".petition-signatures-progress").progressBar({
        color: "#{@cycle.color}"
      });

      $(".past-versions").popover({
        html: true,
        container: "body",
        content: $("#past-versions-popover").html(),
        template: $("#popover_template").html(),
        placement: "right",
      });

      function updatePetitionInfo() {
        apiClient.getPetitionInfo(#{@petition.id}).then(function(petitionInfo) {
          if (petitionInfo) {
            var count = petitionInfo.signatures_count;
            var currentGoal = petitionInfo.current_signatures_goal;

            var percentage = (count / currentGoal) * 100;
            var nCount = numeral(count);
            var nCurrentGoal = numeral(currentGoal);
            $(".petition-signatures-progress").trigger("update", percentage + "%");
            $(".already-signed strong").text(nCount.format() + " ");
            $(".remaining-signatures").text(" " + numeral(currentGoal - count).format() + " ");
            $(".phone-bottom-info .total-signatures").text(nCount.format() + " de " + nCurrentGoal.format());
            $(".progress-description .current-goal").text(nCurrentGoal.format());
          }
        });
      }

      if (petitionInProgress) {
        setInterval(updatePetitionInfo, 10000)
      }
      updatePetitionInfo();
    });
